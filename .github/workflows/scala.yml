name: Scala CI with Coverage

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out master and run tests
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'sbt'
      - name: Run tests with coverage
        run: sbt clean coverage test coverageReport
      - name: Parse coverage percentage
        id: coverage
        run: |
          COVERAGE=$(grep -oP '(?<=statement-rate=")[0-9.]+(?=")' target/scala-*/scoverage-report/scoverage.xml | head -1)
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV

      # Step 2: Check out gh-pages, merge master, and add coverage report
      - name: Prepare and Deploy Coverage Report
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          # Fetch and check out gh-pages branch
          git fetch origin gh-pages
          git checkout gh-pages
          
          # Merge latest changes from master
          git merge origin/master

          # Add the coverage report
          mkdir -p coverage
          cp -r target/scala-*/scoverage-report/* coverage/

          # Generate the badge as an SVG
          BADGE_URL="https://img.shields.io/badge/coverage-${{ env.COVERAGE }}%25-brightgreen.svg"
          curl -o coverage/coverage-badge.svg "$BADGE_URL"

          # Commit and push the updated report, badge, and merged content
          git add coverage/
          git commit -m "Update coverage report, badge, and source files"
          git push origin gh-pages
